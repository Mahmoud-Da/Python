*** 1- What is Python ***
Why Python:
Solve complex problems in less time with fewer lines of code.

example let`s say we want ti extract the 3 first char of "Hello World"
C#
-------------------code----------------------
str.Substring(0, 3)
-------------------code----------------------

javaScript
-------------------code----------------------
str.substr(0, 3)
-------------------code----------------------

Python
-------------------code----------------------
str[0:3]
-------------------code----------------------

Python is multi-purpose language it can use for:
Data Analysis
Al / ML
Automation
Web Apps
Mobile Apps
Desktop Apps
Testing
Hacking

reason to make Python high desirable language
High-level: don't have to worry about memory management as C++.
Huge Community: where ever get stuck we can find the solution on the net.
Cross-platform: can run on windows and mac and linux.
Large Ecosystem: have large eco system of library and frameworks and tools.
it create more than 20 years.

we have two versions in Python2 and Python3
Python2 is outdated in 2020.
in our course we will work with Python3

*** 2- Installing Python ***

from this site we download it
-------------------code----------------------
http://python.org
-------------------code----------------------

- after download to check the version
-------------------code----------------------
python3 --version
-------------------code----------------------


*** 3- Python Interpreter ***
in the CMD when type Python3 and press enter we can see what we call Interpreter
-------------------code----------------------
$ python3
Python 3.12.0 (v3.12.0:0fb18b02c8, Oct  2 2023, 09:45:56) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>
-------------------code----------------------

Python Interpreter: is a program that execute python code

we can write an expression inside it.
in programming an expression means: piece of code that introduce a value  
-------------------code----------------------
>>> 2 + 2
4
-------------------code----------------------

in programming we have what we called "syntax error"
syntax Error: in programming syntax means grammar, so just like we have 
the concept of grammar in the language we speak we have the exact same concept
in programming
-------------------code----------------------
>>> 2 >
  File "<stdin>", line 1
    2 >
        ^
SyntaxError: invalid syntax
-------------------code----------------------

- Python Interpreter is good opportunity to quickly experiment a piece of code
and when working with real world application we need a Code editor

*** 4- Code Editors ***
when it comes to typing python code we have two options "Editor" or "IDE"
IDE: integrated Development Environment
IDE is basically code editor that comes with fancy features
- Autocompletion: as we type code this feature help you complete your code 
so we don't have to type every charter by hand it's productivity for 
boosting feature
- Debugging: finding bugs in the code
- Testing: for testing the code if it's works as expected

most famous editors:
VSCode
cursor which is fork from vscode
Atom
Sublime

most famous IDE's:
PyCharm

to download vscode 
-------------------code----------------------
code.visualstudio.com
-------------------code----------------------

*** 5- Your First Python Program ***
we will create a file with extension .py we called app1.py

we are going to use a built in function in Python called "print"
in Python we have multi built in functions to perform various type of tasks 

ex:
think as remote controller of the TV it has multi buttons for different functions
"Turn On", "Turn Off", "Change the Chanel" and so on.
this is the built in function in our TV.

we have the same concept in Python (or programming language generally)

and now one of that built in function is called "print" to print something on the screen
where ever we want to use a function we should use "()" in programming we say we 
are calling the print function.
calling a function: means execute it .
so we use call print to show Hello World in the screen
-------------------code----------------------
print("Hello World!")
-------------------code----------------------

- now to run our program we use python3
-------------------code----------------------
$ python3 app1.py
Hello World!
-------------------code----------------------

- now we can add star multi 10
-------------------code----------------------
$ python3 app1.py
**********
Hello World!
**********
-------------------code----------------------

*** 6- Python Extension ***
we will convert the editor to IDE by using what we called extensions
with this extension we got number of features such as 
Linting
Debugging
Autocompletion
Code Formatting
Unit Testing
Code Snippets

extensions useful when working with python:
Python 
Pylint (for linting)

linting in programming:
Lint in programming refers to a tool that analyzes code to identify potential errors,
stylistic issues, or deviations from best practices. It helps developers catch bugs and improve code quality before running the program. Essentially, linting is like having a grammar checker for your code, ensuring that it follows certain rules and conventions.

- now to change the Python version of the VsCode 
1- view -> appearance -> status Bar 
2- click inside the python file then in the button left we change the  version to the 
newest 

*** 7- Linting Python Code ***
we will see linting in action. by typing invalid syntax
-------------------code----------------------
print "Hello World"
-------------------code----------------------

- when we save changes we can see red line under print if hover on it we can 
see error that comes form Pylint
-------------------code----------------------
Parsing failed: 'Missing parentheses in call to 'print'. 
Did you mean print(...)? (app2, line 1)'PylintE0001:syntax-error
-------------------code----------------------

- this is the benefit of linting we don't have to wait until we run the program
to see the errors 

now if we fix the code we can see the under line despise
-------------------code----------------------
print("Hello World")
-------------------code----------------------

- let's see another error 
-------------------code----------------------
1 +
-------------------code----------------------
we got 
-------------------code----------------------
Expected expression Pylance
-------------------code----------------------
or we can open the terminal of the vc code and go to problems to show the errors
-------------------code----------------------
Parsing failed: 'invalid syntax (app2, line 4)'",
-------------------code----------------------

there are many linters for python
flake8
mypy
pep8
prospector 
pydocstyle
pylama
pylint

pylint is the default for the vscode

*** 8- Formatting Python Code ***
in the Python Community we have a lot of documents called 
"Python Enhancement Proposals" or "PEPs"

in google if search for python peps
-------------------code----------------------
https://peps.python.org/
-------------------code----------------------

inside the document we have 
-------------------code----------------------
PA	8	Style Guide for Python Code
-------------------code----------------------
which is so famous between the developers for styling the code 

we will use tool to help us lint our code automatically according to peps 8 
(the section 8 which for styling)

- now let`s write python code 
-------------------code----------------------
x=1
-------------------code----------------------

here we are declare a variable called x and according to peps 8 it's 
considering ugly cause we should add space between the "="
-------------------code----------------------
x = 1
-------------------code----------------------

to format it automatically we use shift + cmd + p  and type "Format Document"
when press enter it will be formatted for us 
it use "autopep8" extension to format our code 
-------------------code----------------------
x = 1
-------------------code----------------------

- now to avoid type "format document" every time we go to 
shift + cmd + p and go to "Open User Settings"
and set the "format on save" to "on"
now when we save our file it will be formatted automatically

*** 9- Running Python Code ***
in order to run  our python program we should run 
-------------------code----------------------
python3 app.py
-------------------code----------------------

to avoid that we can download extension called "runner"
now to run our code we can only press 
-------------------code----------------------
ctrl + option + n
-------------------code----------------------

Ps: save the changes before using this shortcut

there is problem cause it use "python -u" command to run the program by default
it works for windows but not for mac 

so we go to "Open Settings Json" and search for "code-runner.executorMap" and 
copy it to "User Settings Json" then we change the "python -u" to "python3"
-------------------code----------------------
"python": "python3"
-------------------code----------------------

*** 10- Python Implementations ***
when talking about Python we need to separate two things are related
python as "language" and "Implementations"
as "language":
it just a specification that defined a set of rules and grammar for writing python code
as "Implementations":
is basically a program that understand these rules and can excites python

early in the course we download python from python.org and this the default Implementations of 
python called "CPython"
CPython: it's program written in C programming language  
so in terminal when we run Python3 we got CPython which is the default Implementation of python 

there is many IMPLEMENTATIONS:
- Jython: written in Java language
- IronPython: written in C# language
- PyPy: subset of Python

these three Implementation supported at first from "CPython" cause is default Implementation
and then the gradually graduate to another Implementation

in theory if we give the same python code to each these Implementations we should have the same result 
but in practice is not always the case, so certain feature maybe available in one Implementation but not in other
or they just behave a little differently in particular Implementation 

What is the Point of this?
why we have several Implementation for python will "CPython" will be enough...
is the same reason why we have multi system(windows, mac, linux) or multiple browsers or multiple languages
in these years programmers never agreed in one programming language same as Implementation
however there is one technical reason behind these difference 
Jython which written in Java allow you to reuse java code in Python program, so if we are java developer 
and want to use some java code in our python program we should use Jython same as IronPython of we have C# code 

*** 11- How Python Code Works ***
the programming language that we use like C, C#, Python, Java 
these are all simple text based languages that we human understand computers
can`t understand that they only understand machine code "0101010" 

so if we have some code written in C, we should convert it to machine code, and that the job of C Compiler.
- C Compiler: is program knows how to convert or compile c code to machine code.
-------------------code----------------------
+---+          +----------+          +----------------+
| C |  ---->   | Compiler |  ---->   | Machine Code   |
+---+          +----------+          | 01000111       |
                                    　　| 00100001       |
                                       | 11011000       |
                                       +----------------+
-------------------code----------------------

However, this machine code is specific to the type of the CPU of a computer so if we compile a C program on windows
machine we can't executed on mac cause mac and windows systems has different machine code 
just like how people form different countries speak different languages

Java come to solve this problem. Java compiler doesn't compile java code to machine code. 
instead it compile it into a portable language called "JavaByteCode" which is not specific to a hardware platform like
windows or mac

but at this time we still need to convert JavaByteCode to machine code, 
so Java also come with program called "Java Virtual Machine" or "JVM" for doing this

when we run Java program JVM kicks in, it load a a JavaByteCode and then at run time, it will convert each instruction to
machine code. with this model we can run JavaByteCode one  any platforms that have a JVM.
we have JVM Implementation for windows and mac and so on 
-------------------code----------------------
+-----+          +----------+          +--------------+          +----------------+
| Java|  ---->   | Compiler |  ---->   | Java Bytecode|  ---->   | Java Virtual    |
+-----+          +----------+          +--------------+          | Machine         |
                                                                  +----------------+
                                                                          |
                                                                          v
                                                                  +----------------+
                                                                  | Machine Code   |
                                                                  | 01000111       |
                                                                  | 00100011       |
                                                                  | 1011000        |
                                                                  +----------------+
-------------------code----------------------
so JVM on windows knows how to convert JavaByteCode into machine code that windows machine 
can understand.

C# and Python has also taken the same route so there are platform independent.

so when we run Python program using C Python, first it will compile out Python code into 
PythonByteCode then it will pass that ByteCode to Python Virtual Machine or PVM  which will 
in turn convert it into machine code and execute it.
-------------------code----------------------
+--------+          +----------+          +----------------+          +----------------+
| Python |  ---->   |  CPython |  ---->   | Python Bytecode|  ---->   | Python Virtual  |
+--------+          +----------+          +----------------+          | Machine         |
                                                                  +----------------+
                                                                          |
                                                                          v
                                                                  +----------------+
                                                                  | Machine Code   |
                                                                  | 01000111       |
                                                                  | 00100011       |
                                                                  | 1011000        |
                                                                  +----------------+

-------------------code----------------------
in the pervious lesson we speak out how if we us Jython we can use java code in our Python program
so how it`s works 
instead of compiling Python to PythonByteCode it will convert it to JavaByteCode and run it using JVM 
and that why we can import some java code inside our Python program 
-------------------code----------------------
          +--------+
          | Python |
          +--------+
          /        \
         /          \
+----------+      +----------+
| CPython  |      |  Jython  |
+----------+      +----------+
     |                  |
     v                  v
+----------------+   +----------------+
| Python Bytecode|   |  Java Bytecode |
+----------------+   +----------------+
-------------------code----------------------
