*** 1- Comparison Operators ***

we use Comparison Operators to compare values and the result
of it boolean expression.


-------------------code----------------------
>>> 10 > 3
True
>>> 10 >= 3
True
>>> 10 < 20
True
>>> 10 <= 20
True
>>> 10 == 10
True
-------------------code----------------------

how about 
we get False cause this values is different types and stored in different
location in the memory
-------------------code----------------------
>>> 10 == "10"
False
-------------------code----------------------

finally we have the "!" not equal operation
-------------------code----------------------
>>> 10 != "10"
True
-------------------code----------------------

- we can also use comparison operators with strings
cause when we sort these two words bag comes after so it considered greater
-------------------code----------------------
>>> "bag" > "apple"
True
-------------------code----------------------

- when comparison equality between lower case and upper case of the word 
we have false cause every character has numeric presentation in programming

-------------------code----------------------
>>> "bag" == "BAG"
False
-------------------code----------------------

to check the numeric presentation of character we can use ord() method
-------------------code----------------------
>>> ord("b")
98
>>> ord("B")
66
>>> "bag" > "BAG"
True
-------------------code----------------------

*** 2- Conditional Statements ***

in every programming language there is time when we want to make 
a decision and here where we use if Statement.

let's say we have a temperature variable and depends on the value we want to show 
message to user.

we use "if" and after it we add statement which basically a boolean expression produce
a boolean value.

if that expression evaluated to true the follow expression will be executed.
PS: when we use if statement we should always terminate our expression with ":"
-------------------code----------------------
temperature = 37
if temperature > 30:
  => cursor is indented automatically to two white spaces
    and this indent is very important so the Python interpreter which
    statement to execute if the condition is true
-------------------code----------------------

- we can have multi statement unless this statement belong to the 
indented of the if block
PS: when we save the file pip8 indent 4white spaces cause that what it
redemanded
-------------------code----------------------
temperature = 37
if temperature > 30:
    print("it's worm")
    print("Drink water")
-------------------code----------------------

- finally the Done statement will be execute where ever 
the condition is True or False cause
the indented is not belong the if statement 
-------------------code----------------------
temperature = 37
if temperature > 30:
    print("it's worm")
    print("Drink water")
print("Done")

=> it's worm
Drink water
Done
-------------------code----------------------

when we change the temperature
-------------------code----------------------
temperature = 15
if temperature > 30:
    print("it's worm")
    print("Drink water")
print("Done")
=> Done
-------------------code----------------------

- what if want to have multi conditions we use "elif" and that is shortcut 
to "else if "
PS: we can has as many as elif statement as we want
-------------------code----------------------
temperature = 21
if temperature > 30:
    print("it's worm")
    print("Drink water")
elif temperature > 20:
    print("it's nice")
print("Done")
=> it's nice
   Done
-------------------code----------------------

- we can have also "else" which means if not of the conditions are True
-------------------code----------------------
temperature = 15
if temperature > 30:
    print("it's worm")
    print("Drink water")
elif temperature > 20:
    print("it's nice")
else:
    print("it's cold")
print("Done")
=> it's cold
 Done
-------------------code----------------------

*** 3- Ternary Operator ***
in this lesson we will see a technique to how to write a clean code 
lt's say we are building an application for an university and we want to check if 
the person who apply to this university is eligible or not.
-------------------code----------------------
age = 21
if age >= 18:
    print("Eligible")
else:
    print("not Eligible")
# Eligible
-------------------code----------------------

- now there is nothing wrong with this code but we will see a cleaner way 
to achieve the same result.

step1: instead of having multi print methods we can define a variable we 
called "message" and set to value depends on condition
-------------------code----------------------
age = 21
if age >= 18:
    message = "Eligible"
else:
    message = "not Eligible"
print(message)

# Eligible
-------------------code----------------------

step2: when we have an if else statement with this structure where we assign
value to a variable we can rewrite it in simpler way
that what we called "Ternary Operator"
-------------------code----------------------
age = 21
message = "Eligible" if age >= 18 else "not Eligible"
print(message)
-------------------code----------------------
